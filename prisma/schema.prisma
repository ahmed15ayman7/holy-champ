// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Book {
  id          Int    @id @default(autoincrement())
  name        String
  userId      Int
  author      String
  publisher   String
  category    String
  edition     String
  editionYear String
  totalPages  Int

  DailyReport DailyReport[]
  user        User          @relation(fields: [userId], references: [id])
}

model User {
  id                    Int     @id @default(autoincrement())
  name                  String
  phone                 String  @unique
  password              String
  gender                String
  region                String
  readingChallenge      Int
  isPreviousParticipant Boolean
  role                  String  @default("user") // Default role is "user"

  DailyReport DailyReport[]

  Article Article[]

  Book Book[]
}

model DailyReport {
  id             Int     @id @default(autoincrement())
  userId         Int
  bookId         Int
  readingDate    String
  totalPagesRead Int
  finishedBooks  Int
  notes          String?

  book Book @relation(fields: [bookId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

model Article {
  id          Int      @id @default(autoincrement())
  userId      Int
  title       String
  summary     String
  content     String
  author      String
  status      String   @default("pending") // pending, approved, rejected
  notes       String? // ملاحظات الإدارة عند الرفض
  isPublished Boolean  @default(false) // هل المقال منشور؟
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}
